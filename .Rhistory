shiny::runApp('GitHub/ShinyGrid/GridWorld')
shiny::runApp('GitHub/ShinyGrid/GW Walk Through')
shiny::runApp('GitHub/ShinyGrid/GW Walk Through')
shiny::runApp('GitHub/ShinyGrid/GW Walk Through')
shiny::runApp('GitHub/ShinyGrid/GW Walk Through')
?actionButton
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(),
dashboardSidebar(
# Custom CSS to hide the default logout panel
tags$head(tags$style(HTML('.shiny-server-account { display: none; }'))),
# The dynamically-generated user panel
uiOutput("userpanel")
),
dashboardBody()
)
server <- function(input, output, session) {
output$userpanel <- renderUI({
# session$user is non-NULL only in authenticated sessions
if (!is.null(session$user)) {
sidebarUserPanel(
span("Logged in as ", session$user),
subtitle = a(icon("sign-out"), "Logout", href="__logout__"))
}
})
}
shinyApp(ui, server)
library(shiny)
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(),
dashboardSidebar(
# Custom CSS to hide the default logout panel
tags$head(tags$style(HTML('.shiny-server-account { display: none; }'))),
# The dynamically-generated user panel
uiOutput("userpanel")
),
dashboardBody()
)
server <- function(input, output, session) {
output$userpanel <- renderUI({
# session$user is non-NULL only in authenticated sessions
if (!is.null(session$user)) {
sidebarUserPanel(
span("Logged in as ", session$user),
subtitle = a(icon("sign-out"), "Logout", href="__logout__"))
}
})
}
shinyApp(ui, server)
shinyApp(ui, server)
library(shiny)
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(title = "Basic dashboard"),
dashboardSidebar(),
dashboardBody(
# Boxes need to be put in a row (or column)
fluidRow(
box(plotOutput("plot1", height = 250)),
box(
title = "Controls",
sliderInput("slider", "Number of observations:", 1, 100, 50)
)
)
)
)
server <- function(input, output) {
set.seed(122)
histdata <- rnorm(500)
output$plot1 <- renderPlot({
data <- histdata[seq_len(input$slider)]
hist(data)
})
}
shinyApp(ui, server)
)
library(shiny)
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(title = "Basic dashboard"),
dashboardSidebar(
sidebarMenu(
menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard")),
menuItem("Widgets", tabName = "widgets", icon = icon("th"))
)
),
dashboardBody(
tabItems(
# First tab content
tabItem(tabName = "dashboard",
fluidRow(
box(plotOutput("plot1", height = 250)),
box(
title = "Controls",
sliderInput("slider", "Number of observations:", 1, 100, 50)
)
)
),
# Second tab content
tabItem(tabName = "widgets",
h2("Widgets tab content")
)
)
)
)
server <- function(input, output) {
set.seed(122)
histdata <- rnorm(500)
output$plot1 <- renderPlot({
data <- histdata[seq_len(input$slider)]
hist(data)
})
}
shinyApp(ui, server)
})
shiny::runApp('C:/Users/gilman/Desktop/EGDash')
shiny::runApp('C:/Users/gilman/Desktop/EGDash')
shiny::runApp('C:/Users/gilman/Desktop/EGDash')
shiny::runApp('C:/Users/gilman/Desktop/EGDash')
shiny::runApp('C:/Users/gilman/Desktop/EGDash')
shiny::runApp('C:/Users/gilman/Desktop/EGDash')
shiny::runApp('C:/Users/gilman/Desktop/EGDash')
shiny::runApp('C:/Users/gilman/Desktop/EGDash')
shiny::runApp('C:/Users/gilman/Desktop/EGDash')
shiny::runApp('C:/Users/gilman/Desktop/EGDash')
shiny::runApp('C:/Users/gilman/Desktop/EGDash')
shiny::runApp('C:/Users/gilman/Desktop/EGDash')
shiny::runApp('C:/Users/gilman/Desktop/EGDash')
shiny::runApp('C:/Users/gilman/Desktop/EGDash')
shiny::runApp('C:/Users/gilman/Desktop/EGDash')
shiny::runApp('C:/Users/gilman/Desktop/EGDash')
shiny::runApp('C:/Users/gilman/Desktop/EGDash')
shiny::runApp('C:/Users/gilman/Desktop/EGDash')
shiny::runApp('C:/Users/gilman/Desktop/EGDash')
shiny::runApp('C:/Users/gilman/Desktop/EGDash')
shiny::runApp('C:/Users/gilman/Desktop/EGDash')
shiny::runApp('C:/Users/gilman/Desktop/EGDash')
shiny::runApp('C:/Users/gilman/Desktop/EGDash')
shiny::runApp('C:/Users/gilman/Desktop/EGDash')
shiny::runApp('C:/Users/gilman/Desktop/EGDash')
shiny::runApp('C:/Users/gilman/Desktop/EGDash')
shiny::runApp('C:/Users/gilman/Desktop/EGDash')
shiny::runApp('C:/Users/gilman/Desktop/EGDash')
shiny::runApp('C:/Users/gilman/Desktop/EGDash')
shiny::runApp('C:/Users/gilman/Desktop/EGDash')
shiny::runApp('C:/Users/gilman/Desktop/EGDash')
shiny::runApp('C:/Users/gilman/Desktop/EGDash')
shiny::runApp('C:/Users/gilman/Desktop/EGDash')
shiny::runApp('C:/Users/gilman/Desktop/EGDash')
shiny::runApp('C:/Users/gilman/Desktop/EGDash')
shiny::runApp('C:/Users/gilman/Desktop/EGDash')
shiny::runApp('C:/Users/gilman/Desktop/EGDash')
shiny::runApp('C:/Users/gilman/Desktop/EGDash')
shiny::runApp('C:/Users/gilman/Desktop/EGDash')
setwd("C:/Users/gilman/Desktop/EGDash")
shiny::runApp()
shiny::runApp()
shiny::runApp()
